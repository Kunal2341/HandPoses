import pickle
import numpy as np
from pprint import pprint
# load the array from the binary file
with open('data.pickle', 'rb') as f:
    data = pickle.load(f)

dataShorted = data[1:3]
#pprint(dataShorted)
pprint(data[1])
data = [['brightenedImg-1.25',
  {'landmark': [{'x': 0.50728166, 'y': 0.07393631, 'z': 5.9266714e-08},
                {'x': 0.45889327, 'y': 0.107626, 'z': -0.009482419},
                {'x': 0.4230081, 'y': 0.17038676, 'z': -0.017695114},
                {'x': 0.4108607, 'y': 0.23965248, 'z': -0.022627404},
                {'x': 0.41442168, 'y': 0.2947613, 'z': -0.028779896},
                {'x': 0.4517515, 'y': 0.15887961, 'z': -0.042271692},
                {'x': 0.4414161, 'y': 0.24728338, 'z': -0.05686704},
                {'x': 0.4344435, 'y': 0.29942852, 'z': -0.06339535},
                {'x': 0.42707086, 'y': 0.34086573, 'z': -0.06755172},
                {'x': 0.4833916, 'y': 0.16138998, 'z': -0.043501467},
                {'x': 0.4759118, 'y': 0.2564775, 'z': -0.057682056},
                {'x': 0.4685287, 'y': 0.32285345, 'z': -0.06451584},
                {'x': 0.4603449, 'y': 0.3725783, 'z': -0.07111881},
                {'x': 0.5089852, 'y': 0.16682175, 'z': -0.04326959},
                {'x': 0.5058501, 'y': 0.25571653, 'z': -0.0546807},
                {'x': 0.49871305, 'y': 0.31731096, 'z': -0.06114827},
                {'x': 0.48858312, 'y': 0.3641371, 'z': -0.06697428},
                {'x': 0.5278864, 'y': 0.1718291, 'z': -0.04287474},
                {'x': 0.5351898, 'y': 0.24521858, 'z': -0.053861715},
                {'x': 0.53442585, 'y': 0.29258516, 'z': -0.060371716},
                {'x': 0.5297064, 'y': 0.33082727, 'z': -0.06558263}]}],
 ['brightenedImg-1.50',
  {'landmark': [{'x': 0.5067531, 'y': 0.07718691, 'z': 5.4892684e-08},
                {'x': 0.45926014, 'y': 0.10956736, 'z': -0.009576127},
                {'x': 0.42414334, 'y': 0.17125745, 'z': -0.018798092},
                {'x': 0.41241825, 'y': 0.2413021, 'z': -0.024633167},
                {'x': 0.4155789, 'y': 0.29736617, 'z': -0.03169875},
                {'x': 0.45114762, 'y': 0.15858139, 'z': -0.045726553},
                {'x': 0.44051984, 'y': 0.24888104, 'z': -0.061819967},
                {'x': 0.43393034, 'y': 0.30142158, 'z': -0.06886981},
                {'x': 0.42714497, 'y': 0.34253436, 'z': -0.073150165},
                {'x': 0.48257256, 'y': 0.16025853, 'z': -0.047268864},
                {'x': 0.47469825, 'y': 0.256877, 'z': -0.06283671},
                {'x': 0.46728265, 'y': 0.3232186, 'z': -0.06964587},
                {'x': 0.4592145, 'y': 0.37155956, 'z': -0.07604247},
                {'x': 0.50836885, 'y': 0.16582404, 'z': -0.047280986},
                {'x': 0.50514925, 'y': 0.25476086, 'z': -0.059962735},
                {'x': 0.49805346, 'y': 0.31672713, 'z': -0.06668329},
                {'x': 0.48806438, 'y': 0.36287734, 'z': -0.07249752},
                {'x': 0.52774644, 'y': 0.17153469, 'z': -0.047009382},
                {'x': 0.5353053, 'y': 0.24434619, 'z': -0.0590285},
                {'x': 0.53436685, 'y': 0.29156741, 'z': -0.0660406},
                {'x': 0.52943856, 'y': 0.3297814, 'z': -0.07149755}]}],
 ['brightenedImg-1.75',
  {'landmark': [{'x': 0.50491524, 'y': 0.082215324, 'z': 6.2099986e-08},
                {'x': 0.45799622, 'y': 0.11276696, 'z': -0.0106107285},
                {'x': 0.42467183, 'y': 0.17299631, 'z': -0.020861626},
                {'x': 0.4136622, 'y': 0.24208549, 'z': -0.027514683},
                {'x': 0.41576013, 'y': 0.29864255, 'z': -0.035430595},
                {'x': 0.4513241, 'y': 0.15891144, 'z': -0.04973496},
                {'x': 0.4410722, 'y': 0.2480917, 'z': -0.06725907},
                {'x': 0.43428233, 'y': 0.29935038, 'z': -0.075000085},
                {'x': 0.4271348, 'y': 0.33945686, 'z': -0.0795918},
                {'x': 0.4828169, 'y': 0.1611496, 'z': -0.051106114},
                {'x': 0.47399426, 'y': 0.25508666, 'z': -0.068421684},
                {'x': 0.4665649, 'y': 0.32154977, 'z': -0.07577634},
                {'x': 0.45874062, 'y': 0.36903676, 'z': -0.082351066},
                {'x': 0.5086215, 'y': 0.16782574, 'z': -0.050795253},
                {'x': 0.504874, 'y': 0.25563896, 'z': -0.06480746},
                {'x': 0.49758425, 'y': 0.31863785, 'z': -0.07181661},
                {'x': 0.48735482, 'y': 0.36508483, 'z': -0.077624135},
                {'x': 0.5284834, 'y': 0.17481619, 'z': -0.050193246},
                {'x': 0.53564745, 'y': 0.24652776, 'z': -0.06334567},
                {'x': 0.53419834, 'y': 0.29411846, 'z': -0.07075699},
                {'x': 0.52871156, 'y': 0.33285937, 'z': -0.07634459}]}]]



outliers = {}
for image in data:
    image_name = image[0]
    landmarks = image[1]['landmark']
    for i, landmark in enumerate(landmarks):
        for coordinate in ['x', 'y', 'z']:
            coords = [l[coordinate] for l in landmarks]
            mean = np.mean(coords)
            std_dev = np.std(coords)
            coord = landmark[coordinate]
            if abs(coord - mean) > 2 * std_dev:
                if image_name not in outliers:
                    outliers[image_name] = []
                outliers[image_name].append((i, coord))
print(outliers)

def z_score_outliers(data, threshold=3):
    """
    Calculate the outliers for the x,y,z values
    """
    outliers = {}
    for image in data:
        image_name = image[0]
        landmarks = image[1]['landmark']
        for i, landmark in enumerate(landmarks):
            x,y,z = landmark.values()
            point = [x,y,z]
            z_scores = np.abs(stats.zscore(point))
            if any(z_scores > threshold):
                if image_name not in outliers:
                    outliers[image_name] = []
                outliers[image_name].append((i, point))
    return outliers